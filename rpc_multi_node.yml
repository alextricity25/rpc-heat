heat_template_version: 2013-05-23

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: a3ba4cf5-70b9-4805-afa2-30d1ab81a625

  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used
    default: performance1-8

  key_name:
    type: string
    label: Key name
    description: Name of key-pair to be used for compute instance
    default: default

  version:
    type: string
    label: RPC version
    description: RPC version to install
    default: master

  cluster_prefix:
    type: string
    label: Cluster prefix
    description: Prefix to use when building cluster
    default: heat
    constraints:
      # The recommended hostname length should be less than 20 chars, we tack
      # on -nodeX which adds up to another 5 chars, hence max being 14.
      - length: { min: 1, max: 14 }

  ansible_playbooks:
    type: string
    label: Ansible playbooks
    description: Ansible playbooks to run (all => all, minimal => (all - logging/support playbooks)
    default: all
    constraints:
      - allowed_values: [ all, minimal ]

resources:
  heat_mgmt_vxlan:
    type: Rackspace::Cloud::Network
    properties:
      cidr: 172.29.232.0/22
      label: heat_mgmt_vxlan

  heat_tunnel:
    type: Rackspace::Cloud::Network
    properties:
      cidr: 172.29.240.0/22
      label: heat_tunnel

  heat_storage:
    type: Rackspace::Cloud::Network
    properties:
      cidr: 172.29.244.0/22
      label: heat_storage

  controller1:
    type: "Rackspace::Cloud::Server"
    # Don't build controller1 until the others are up as the ansible run
    # will fail if they are down.
    depends_on: [ controller2, controller3, compute1, compute2 ]
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      name:
        str_replace:
          template: "%%CLUSTER_PREFIX%%-node1"
          params:
            "%%CLUSTER_PREFIX%%": { get_param: cluster_prefix }
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: heat_mgmt_vxlan }
        - uuid: { get_resource: heat_tunnel }
        - uuid: { get_resource: heat_storage }
      user_data:
        str_replace:
          template: { get_file: config_controller_primary.sh }
          params:
            "%%ID%%": "1"
            "%%RPC_VERSION%%": { get_param: version }
            "%%EXTERNAL_VIP_IP%%": { get_attr: [controller3, accessIPv4] }
            "%%PRIVATE_KEY%%": { get_file: id_rsa }
            "%%PUBLIC_KEY%%": { get_file: id_rsa.pub }
            "%%CLUSTER_PREFIX%%": { get_param: cluster_prefix }
            "%%ANSIBLE_PLAYBOOKS%%": { get_param: ansible_playbooks }

  controller2:
    type: "Rackspace::Cloud::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      name:
        str_replace:
          template: "%%CLUSTER_PREFIX%%-node2"
          params:
            "%%CLUSTER_PREFIX%%": { get_param: cluster_prefix }
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: heat_mgmt_vxlan }
        - uuid: { get_resource: heat_tunnel }
        - uuid: { get_resource: heat_storage }
      user_data:
        str_replace:
          template: { get_file: config_controller_other.sh }
          params:
            "%%ID%%": "2"
            "%%RPC_VERSION%%": { get_param: version }
            "%%PUBLIC_KEY%%": { get_file: id_rsa.pub }
            "%%CLUSTER_PREFIX%%": { get_param: cluster_prefix }

  controller3:
    type: "Rackspace::Cloud::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      name:
        str_replace:
          template: "%%CLUSTER_PREFIX%%-node3"
          params:
            "%%CLUSTER_PREFIX%%": { get_param: cluster_prefix }
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: heat_mgmt_vxlan }
        - uuid: { get_resource: heat_tunnel }
        - uuid: { get_resource: heat_storage }
      user_data:
        str_replace:
          template: { get_file: config_controller_other.sh }
          params:
            "%%ID%%": "3"
            "%%RPC_VERSION%%": { get_param: version }
            "%%PUBLIC_KEY%%": { get_file: id_rsa.pub }
            "%%CLUSTER_PREFIX%%": { get_param: cluster_prefix }

  compute1:
    type: "Rackspace::Cloud::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      name:
        str_replace:
          template: "%%CLUSTER_PREFIX%%-node4"
          params:
            "%%CLUSTER_PREFIX%%": { get_param: cluster_prefix }
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: heat_mgmt_vxlan }
        - uuid: { get_resource: heat_tunnel }
        - uuid: { get_resource: heat_storage }
      user_data:
        str_replace:
          template: { get_file: config_compute_all.sh }
          params:
            "%%ID%%": "4"
            "%%RPC_VERSION%%": { get_param: version }
            "%%PUBLIC_KEY%%": { get_file: id_rsa.pub }
            "%%CLUSTER_PREFIX%%": { get_param: cluster_prefix }

  compute2:
    type: "Rackspace::Cloud::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      name:
        str_replace:
          template: "%%CLUSTER_PREFIX%%-node5"
          params:
            "%%CLUSTER_PREFIX%%": { get_param: cluster_prefix }
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: heat_mgmt_vxlan }
        - uuid: { get_resource: heat_tunnel }
        - uuid: { get_resource: heat_storage }
      user_data:
        str_replace:
          template: { get_file: config_compute_all.sh }
          params:
            "%%ID%%": "5"
            "%%RPC_VERSION%%": { get_param: version }
            "%%PUBLIC_KEY%%": { get_file: id_rsa.pub }
            "%%CLUSTER_PREFIX%%": { get_param: cluster_prefix }

outputs:
  controller1_ip:
    description: The IP address of controller1
    value: { get_attr: [controller1, accessIPv4] }
  controller2_ip:
    description: The IP address of controller2
    value: { get_attr: [controller2, accessIPv4] }
  controller3_ip:
    description: The IP address of controller3
    value: { get_attr: [controller3, accessIPv4] }
  heat-compute-1_ip:
    description: The IP address of compute1
    value: { get_attr: [compute1, accessIPv4] }
  compute2_ip:
    description: The IP address of compute2
    value: { get_attr: [compute2, accessIPv4] }
